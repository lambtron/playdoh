#!/usr/bin/env node

var config = require('../lib/config');
var express = require('express');
var program = require('commander');
var logger = require('../lib/logger');
var exec = require('child_process').exec;
var resolve = require('path').resolve;

/**
 * Program.
 */

program
  .option('-p, --port <port>', 'the port to run the server on', 4242)
  .option('-d, --directory <dir>', 'the blog\'s root directory', process.cwd())
  .option('-r, --rebuild', 'whether to rebuild the components', false)
  .parse(process.argv);

logger.log('Starting the preview server...');

/**
 * Settings.
 */

var dir = program.directory;
var conf = config(dir);
var port = program.port;
var rebuild = program.rebuild;
var dest = program.destination = resolve(dir, 'build');

/**
 * Server.
 */

express()
  .use(build)
  .use(express.static(dest))
  .listen(port, function log() {
    logger.log('You can preview your blog at: http://localhost:' + port);
    console.log();
  });

/**
 * Rebuild on HTML requests.
 *
 * @param {Request} req
 * @param {Response} res
 * @param {Function} next
 */

function build(req, res, next) {
  var accept = req.get('accept');
  if (0 !== accept.indexOf('text/html')) return next();

  var cmd = resolve(__dirname, 'plato-build -d ' + dir);
  exec(cmd, { cwd: process.cwd }, function(err){
    if (err) return next(err);
    if (!rebuild) return next();

    exec('make support', { cwd: resolve(__dirname, '..') }, function(err){
      if (err) return next(err);
      next();
    });
  });
}
